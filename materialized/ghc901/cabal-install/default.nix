{
  pkgs = hackage:
    {
      packages = {
        "void".revision = (((hackage."void")."0.7.3").revisions).default;
        "void".flags.safe = false;
        "semigroupoids".revision = (((hackage."semigroupoids")."5.3.5").revisions).default;
        "semigroupoids".flags.comonad = true;
        "semigroupoids".flags.unordered-containers = true;
        "semigroupoids".flags.distributive = true;
        "semigroupoids".flags.tagged = true;
        "semigroupoids".flags.containers = true;
        "semigroupoids".flags.contravariant = true;
        "free".revision = (((hackage."free")."5.1.6").revisions).default;
        "cereal".revision = (((hackage."cereal")."0.5.8.1").revisions).default;
        "cereal".flags.bytestring-builder = false;
        "exceptions".revision = (((hackage."exceptions")."0.10.4").revisions).default;
        "cryptohash-sha256".revision = (((hackage."cryptohash-sha256")."0.11.102.0").revisions).default;
        "cryptohash-sha256".flags.use-cbits = true;
        "cryptohash-sha256".flags.exe = false;
        "binary".revision = (((hackage."binary")."0.8.8.0").revisions).default;
        "tar".revision = (((hackage."tar")."0.5.1.1").revisions).default;
        "tar".flags.old-time = false;
        "tar".flags.old-bytestring = false;
        "regex-tdfa".revision = (((hackage."regex-tdfa")."1.3.1.0").revisions).default;
        "regex-tdfa".flags.force-o2 = false;
        "ghc-prim".revision = (((hackage."ghc-prim")."0.7.0").revisions).default;
        "bifunctors".revision = (((hackage."bifunctors")."5.5.10").revisions).default;
        "bifunctors".flags.semigroups = true;
        "bifunctors".flags.tagged = true;
        "dense-linear-algebra".revision = (((hackage."dense-linear-algebra")."0.1.0.0").revisions).default;
        "edit-distance".revision = (((hackage."edit-distance")."0.2.2.1").revisions).default;
        "data-fix".revision = (((hackage."data-fix")."0.3.1").revisions).default;
        "stm".revision = (((hackage."stm")."2.5.0.0").revisions).default;
        "dec".revision = (((hackage."dec")."0.0.3").revisions).default;
        "base-compat-batteries".revision = (((hackage."base-compat-batteries")."0.11.2").revisions).default;
        "unix".revision = (((hackage."unix")."2.7.2.2").revisions).default;
        "tasty-quickcheck".revision = (((hackage."tasty-quickcheck")."0.10.1.2").revisions).default;
        "mtl".revision = (((hackage."mtl")."2.2.2").revisions).default;
        "network-uri".revision = (((hackage."network-uri")."2.6.4.1").revisions).default;
        "regex-base".revision = (((hackage."regex-base")."0.94.0.0").revisions).default;
        "zlib".revision = (((hackage."zlib")."0.6.2.2").revisions).default;
        "zlib".flags.non-blocking-ffi = false;
        "zlib".flags.bundled-c-zlib = false;
        "zlib".flags.pkg-config = false;
        "rts".revision = (((hackage."rts")."1.0").revisions).default;
        "statistics".revision = (((hackage."statistics")."0.15.2.0").revisions).default;
        "regex-posix".revision = (((hackage."regex-posix")."0.96.0.0").revisions).default;
        "regex-posix".flags._regex-posix-clib = false;
        "clock".revision = (((hackage."clock")."0.8.2").revisions).default;
        "clock".flags.llvm = false;
        "adjunctions".revision = (((hackage."adjunctions")."4.4").revisions).default;
        "rere".revision = (((hackage."rere")."0.1").revisions).default;
        "rere".flags.rere-cfg = true;
        "rere".flags.rere-intersection = false;
        "distributive".revision = (((hackage."distributive")."0.6.2.1").revisions).default;
        "distributive".flags.semigroups = true;
        "distributive".flags.tagged = true;
        "vector-th-unbox".revision = (((hackage."vector-th-unbox")."0.2.1.7").revisions).default;
        "bytestring-builder".revision = (((hackage."bytestring-builder")."0.10.8.2.0").revisions).default;
        "bytestring-builder".flags.bytestring_has_builder = true;
        "QuickCheck".revision = (((hackage."QuickCheck")."2.14.2").revisions).default;
        "QuickCheck".flags.templatehaskell = true;
        "QuickCheck".flags.old-random = false;
        "scientific".revision = (((hackage."scientific")."0.3.6.2").revisions).default;
        "scientific".flags.integer-simple = false;
        "scientific".flags.bytestring-builder = false;
        "tasty".revision = (((hackage."tasty")."1.4.1").revisions).default;
        "tasty".flags.unix = true;
        "tasty".flags.clock = true;
        "parallel".revision = (((hackage."parallel")."3.2.2.0").revisions).default;
        "deepseq".revision = (((hackage."deepseq")."1.4.5.0").revisions).default;
        "random".revision = (((hackage."random")."1.2.0").revisions).default;
        "temporary".revision = (((hackage."temporary")."1.3").revisions).default;
        "uuid-types".revision = (((hackage."uuid-types")."1.0.3").revisions).default;
        "optparse-applicative".revision = (((hackage."optparse-applicative")."0.16.1.0").revisions).default;
        "optparse-applicative".flags.process = true;
        "network".revision = (((hackage."network")."3.1.2.1").revisions).default;
        "network".flags.devel = false;
        "splitmix".revision = (((hackage."splitmix")."0.1.0.3").revisions).default;
        "splitmix".flags.optimised-mixer = false;
        "async".revision = (((hackage."async")."2.2.2").revisions).default;
        "async".flags.bench = false;
        "dlist".revision = (((hackage."dlist")."1.0").revisions).default;
        "dlist".flags.werror = false;
        "regex-compat-tdfa".revision = (((hackage."regex-compat-tdfa")."0.95.1.4").revisions).default;
        "regex-compat-tdfa".flags.splitbase = true;
        "regex-compat-tdfa".flags.newbase = true;
        "semigroups".revision = (((hackage."semigroups")."0.19.1").revisions).default;
        "semigroups".flags.bytestring = true;
        "semigroups".flags.unordered-containers = true;
        "semigroups".flags.text = true;
        "semigroups".flags.tagged = true;
        "semigroups".flags.containers = true;
        "semigroups".flags.binary = true;
        "semigroups".flags.hashable = true;
        "semigroups".flags.transformers = true;
        "semigroups".flags.deepseq = true;
        "semigroups".flags.bytestring-builder = false;
        "semigroups".flags.template-haskell = true;
        "tree-diff".revision = (((hackage."tree-diff")."0.1").revisions).default;
        "parsec".revision = (((hackage."parsec")."3.1.14.0").revisions).default;
        "echo".revision = (((hackage."echo")."0.1.3").revisions).default;
        "echo".flags.example = false;
        "hsc2hs".revision = (((hackage."hsc2hs")."0.68.7").revisions).default;
        "hsc2hs".flags.in-ghc-tree = false;
        "resolv".revision = (((hackage."resolv")."0.1.2.0").revisions).default;
        "directory".revision = (((hackage."directory")."1.3.6.1").revisions).default;
        "transformers-compat".revision = (((hackage."transformers-compat")."0.6.6").revisions).default;
        "transformers-compat".flags.five = false;
        "transformers-compat".flags.generic-deriving = true;
        "transformers-compat".flags.two = false;
        "transformers-compat".flags.five-three = true;
        "transformers-compat".flags.mtl = true;
        "transformers-compat".flags.four = false;
        "transformers-compat".flags.three = false;
        "template-haskell".revision = (((hackage."template-haskell")."2.17.0.0").revisions).default;
        "vector".revision = (((hackage."vector")."0.12.2.0").revisions).default;
        "vector".flags.unsafechecks = false;
        "vector".flags.internalchecks = false;
        "vector".flags.wall = false;
        "vector".flags.boundschecks = true;
        "primitive".revision = (((hackage."primitive")."0.7.1.0").revisions).default;
        "profunctors".revision = (((hackage."profunctors")."5.6.1").revisions).default;
        "fin".revision = (((hackage."fin")."0.1.1").revisions).default;
        "base-compat".revision = (((hackage."base-compat")."0.11.2").revisions).default;
        "math-functions".revision = (((hackage."math-functions")."0.3.4.1").revisions).default;
        "math-functions".flags.system-expm1 = true;
        "math-functions".flags.system-erf = true;
        "time-compat".revision = (((hackage."time-compat")."1.9.5").revisions).default;
        "time-compat".flags.old-locale = false;
        "ansi-terminal".revision = (((hackage."ansi-terminal")."0.11").revisions).default;
        "ansi-terminal".flags.example = false;
        "vector-binary-instances".revision = (((hackage."vector-binary-instances")."0.2.5.1").revisions).default;
        "tagged".revision = (((hackage."tagged")."0.8.6.1").revisions).default;
        "tagged".flags.transformers = true;
        "tagged".flags.deepseq = true;
        "parsers".revision = (((hackage."parsers")."0.12.10").revisions).default;
        "parsers".flags.parsec = true;
        "parsers".flags.binary = true;
        "parsers".flags.attoparsec = true;
        "containers".revision = (((hackage."containers")."0.6.4.1").revisions).default;
        "integer-logarithms".revision = (((hackage."integer-logarithms")."1.0.3.1").revisions).default;
        "integer-logarithms".flags.check-bounds = false;
        "integer-logarithms".flags.integer-gmp = true;
        "these".revision = (((hackage."these")."1.1.1.1").revisions).default;
        "these".flags.assoc = true;
        "monad-par".revision = (((hackage."monad-par")."0.3.5").revisions).default;
        "monad-par".flags.newgeneric = false;
        "monad-par".flags.chaselev = false;
        "bytestring".revision = (((hackage."bytestring")."0.10.12.1").revisions).default;
        "ansi-wl-pprint".revision = (((hackage."ansi-wl-pprint")."0.6.9").revisions).default;
        "ansi-wl-pprint".flags.example = false;
        "mwc-random".revision = (((hackage."mwc-random")."0.15.0.1").revisions).default;
        "wcwidth".revision = (((hackage."wcwidth")."0.0.2").revisions).default;
        "wcwidth".flags.split-base = true;
        "wcwidth".flags.cli = false;
        "StateVar".revision = (((hackage."StateVar")."1.2.1").revisions).default;
        "charset".revision = (((hackage."charset")."0.3.7.1").revisions).default;
        "contravariant".revision = (((hackage."contravariant")."1.5.3").revisions).default;
        "contravariant".flags.semigroups = true;
        "contravariant".flags.tagged = true;
        "contravariant".flags.statevar = true;
        "indexed-traversable".revision = (((hackage."indexed-traversable")."0.1.1").revisions).default;
        "text".revision = (((hackage."text")."1.2.4.1").revisions).default;
        "Cabal".revision = (((hackage."Cabal")."3.2.1.0").revisions).default;
        "Cabal".flags.bundled-binary-generic = false;
        "assoc".revision = (((hackage."assoc")."1.0.2").revisions).default;
        "unordered-containers".revision = (((hackage."unordered-containers")."0.2.13.0").revisions).default;
        "unordered-containers".flags.debug = false;
        "base64-bytestring".revision = (((hackage."base64-bytestring")."1.2.0.1").revisions).default;
        "base".revision = (((hackage."base")."4.15.0.0").revisions).default;
        "abstract-deque".revision = (((hackage."abstract-deque")."0.3").revisions).default;
        "abstract-deque".flags.usecas = false;
        "comonad".revision = (((hackage."comonad")."5.0.8").revisions).default;
        "comonad".flags.indexed-traversable = true;
        "comonad".flags.distributive = true;
        "comonad".flags.containers = true;
        "time".revision = (((hackage."time")."1.9.3").revisions).default;
        "th-compat".revision = (((hackage."th-compat")."0.1.1").revisions).default;
        "data-default-class".revision = (((hackage."data-default-class")."0.1.2.0").revisions).default;
        "base16-bytestring".revision = (((hackage."base16-bytestring")."0.1.1.7").revisions).default;
        "vector-algorithms".revision = (((hackage."vector-algorithms")."0.8.0.4").revisions).default;
        "vector-algorithms".flags.unsafechecks = false;
        "vector-algorithms".flags.internalchecks = false;
        "vector-algorithms".flags.llvm = false;
        "vector-algorithms".flags.boundschecks = true;
        "vector-algorithms".flags.bench = true;
        "vector-algorithms".flags.properties = true;
        "transformers".revision = (((hackage."transformers")."0.5.6.2").revisions).default;
        "hashable".revision = (((hackage."hashable")."1.2.7.0").revisions).default;
        "hashable".flags.sse2 = true;
        "hashable".flags.integer-gmp = true;
        "hashable".flags.sse41 = false;
        "hashable".flags.examples = false;
        "attoparsec".revision = (((hackage."attoparsec")."0.13.2.4").revisions).default;
        "attoparsec".flags.developer = false;
        "HTTP".revision = (((hackage."HTTP")."4000.3.15").revisions).default;
        "HTTP".flags.mtl1 = false;
        "HTTP".flags.conduit10 = false;
        "HTTP".flags.warn-as-error = false;
        "HTTP".flags.warp-tests = false;
        "HTTP".flags.network-uri = true;
        "vec".revision = (((hackage."vec")."0.3").revisions).default;
        "vec".flags.semigroupoids = true;
        "vec".flags.adjunctions = true;
        "vec".flags.distributive = true;
        "colour".revision = (((hackage."colour")."2.3.5").revisions).default;
        "transformers-base".revision = (((hackage."transformers-base")."0.4.5.2").revisions).default;
        "transformers-base".flags.orphaninstances = true;
        "strict".revision = (((hackage."strict")."0.4.0.1").revisions).default;
        "strict".flags.assoc = true;
        "ghc-bignum".revision = (((hackage."ghc-bignum")."1.0").revisions).default;
        "monad-par-extras".revision = (((hackage."monad-par-extras")."0.3.3").revisions).default;
        "filepath".revision = (((hackage."filepath")."1.4.2.1").revisions).default;
        "ed25519".revision = (((hackage."ed25519")."0.0.2.0").revisions).default;
        "ed25519".flags.test-hlint = true;
        "ed25519".flags.test-properties = true;
        "unbounded-delays".revision = (((hackage."unbounded-delays")."0.1.1.1").revisions).default;
        "process".revision = (((hackage."process")."1.6.11.0").revisions).default;
        "pretty".revision = (((hackage."pretty")."1.1.3.6").revisions).default;
        "lukko".revision = (((hackage."lukko")."0.1.1.3").revisions).default;
        "lukko".flags.ofd-locking = true;
        "aeson".revision = (((hackage."aeson")."1.5.5.1").revisions).default;
        "aeson".flags.cffi = false;
        "aeson".flags.fast = false;
        "aeson".flags.bytestring-builder = false;
        "aeson".flags.developer = false;
        "abstract-par".revision = (((hackage."abstract-par")."0.3.3").revisions).default;
        "ghc-boot-th".revision = (((hackage."ghc-boot-th")."9.0.1").revisions).default;
        "base-orphans".revision = (((hackage."base-orphans")."0.8.4").revisions).default;
        "th-abstraction".revision = (((hackage."th-abstraction")."0.4.2.0").revisions).default;
        "array".revision = (((hackage."array")."0.5.4.0").revisions).default;
        "hackage-security".revision = (((hackage."hackage-security")."0.6.0.1").revisions).default;
        "hackage-security".flags.old-directory = false;
        "hackage-security".flags.use-network-uri = true;
        "hackage-security".flags.base48 = true;
        "hackage-security".flags.lukko = true;
        "hackage-security".flags.mtl21 = false;
        "integer-gmp".revision = (((hackage."integer-gmp")."1.1").revisions).default;
        };
      compiler = {
        version = "9.0.1";
        nix-name = "ghc901";
        packages = {
          "exceptions" = "0.10.4";
          "binary" = "0.8.8.0";
          "ghc-prim" = "0.7.0";
          "stm" = "2.5.0.0";
          "unix" = "2.7.2.2";
          "mtl" = "2.2.2";
          "rts" = "1.0";
          "deepseq" = "1.4.5.0";
          "parsec" = "3.1.14.0";
          "directory" = "1.3.6.1";
          "template-haskell" = "2.17.0.0";
          "containers" = "0.6.4.1";
          "bytestring" = "0.10.12.1";
          "text" = "1.2.4.1";
          "base" = "4.15.0.0";
          "time" = "1.9.3";
          "transformers" = "0.5.6.2";
          "ghc-bignum" = "1.0";
          "filepath" = "1.4.2.1";
          "process" = "1.6.11.0";
          "pretty" = "1.1.3.6";
          "ghc-boot-th" = "9.0.1";
          "array" = "0.5.4.0";
          "integer-gmp" = "1.1";
          };
        };
      };
  extras = hackage:
    {
      packages = {
        cabal-benchmarks = ./.plan.nix/cabal-benchmarks.nix;
        Cabal = ./.plan.nix/Cabal.nix;
        cabal-testsuite = ./.plan.nix/cabal-testsuite.nix;
        solver-benchmarks = ./.plan.nix/solver-benchmarks.nix;
        Cabal-QuickCheck = ./.plan.nix/Cabal-QuickCheck.nix;
        Cabal-described = ./.plan.nix/Cabal-described.nix;
        Cabal-tree-diff = ./.plan.nix/Cabal-tree-diff.nix;
        cabal-install = ./.plan.nix/cabal-install.nix;
        };
      };
  modules = [
    ({ lib, ... }:
      {
        packages = {
          "cabal-benchmarks" = { flags = {}; };
          "Cabal" = {
            flags = { "bundled-binary-generic" = lib.mkOverride 900 false; };
            };
          "cabal-testsuite" = { flags = {}; };
          "solver-benchmarks" = { flags = {}; };
          "Cabal-QuickCheck" = { flags = {}; };
          "Cabal-described" = { flags = {}; };
          "Cabal-tree-diff" = { flags = {}; };
          "cabal-install" = {
            flags = {
              "native-dns" = lib.mkOverride 900 true;
              "debug-expensive-assertions" = lib.mkOverride 900 false;
              "debug-tracetree" = lib.mkOverride 900 false;
              "lukko" = lib.mkOverride 900 true;
              "debug-conflict-sets" = lib.mkOverride 900 false;
              };
            };
          };
        })
    ];
  }